name: Python Tests and Quality Checks
on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-html ruff

    - name: Run PyTest with Coverage
      run: |
        pytest tests/ \
        --cov=app \
        --cov-report=xml \
        --cov-report=html \
        --html=pytest-report.html \
        --self-contained-html

    - name: Upload Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/
          pytest-report.html
        retention-days: 5

    - name: Code Style and Linting Check with Ruff
      run: |
        ruff check app/
        ruff format app/ --check

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          pytest-report.html
        retention-days: 5

    # Optional: Publish coverage to Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true